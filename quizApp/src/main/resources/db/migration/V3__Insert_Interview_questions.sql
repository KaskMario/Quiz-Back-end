INSERT INTO Question (question_title, option1, option2, option3, option4, right_answer, difficulty_level, category, approved) VALUES
('What is the difference between JDK, JRE, and JVM?', 'JDK is the development kit, JRE is the runtime environment, JVM is the virtual machine', 'JDK is the virtual machine, JRE is the development kit, JVM is the runtime environment', 'JDK is the runtime environment, JRE is the virtual machine, JVM is the development kit', 'All are the same', 'JDK is the development kit, JRE is the runtime environment, JVM is the virtual machine', 'Easy', 'Interview questions', true),
('What is the purpose of the static keyword in Java?', 'To create a new instance of a class', 'To define a method that belongs to the class, not an instance', 'To make the variable changeable', 'None of the above', 'To define a method that belongs to the class, not an instance', 'Easy', 'Interview questions', true),
('Can we override a static method in Java?', 'Yes', 'No', 'Only in some cases', 'Depends on JVM', 'No', 'Medium', 'Interview questions', true),
('What is a constructor in Java?', 'A method that is called when an object is destroyed', 'A method that is called to initialize an object', 'A class that inherits from another class', 'None of the above', 'A method that is called to initialize an object', 'Easy', 'Interview questions', true),
('Explain the concept of Inheritance in Java.', 'Inheritance allows a class to inherit features from another class', 'Inheritance is used to hide data', 'Inheritance is not possible in Java', 'None of the above', 'Inheritance allows a class to inherit features from another class', 'Easy', 'Interview questions', true),
('What is polymorphism in Java?', 'Polymorphism allows us to perform a single action in different ways', 'Polymorphism is used to achieve abstraction', 'Polymorphism is used to hide data', 'None of the above', 'Polymorphism allows us to perform a single action in different ways', 'Medium', 'Interview questions', true),
('Explain the difference between abstract class and interface.', 'Abstract class can have method implementations, interfaces cannot', 'Interfaces can have constructors, abstract classes cannot', 'Both are the same in Java', 'None of the above', 'Abstract class can have method implementations, interfaces cannot', 'Hard', 'Interview questions', true),
('What is encapsulation in Java?', 'Encapsulation is wrapping up of data under a single unit', 'Encapsulation allows multiple methods to have the same name', 'Encapsulation is a technique of getting a behavior from the parent class', 'None of the above', 'Encapsulation is wrapping up of data under a single unit', 'Easy', 'Interview questions', true),
('What is the difference between equals() and == in Java?', 'equals() is used for object reference comparison, == is for content comparison', '== is used for object reference comparison, equals() is for content comparison', 'Both are the same', 'None of the above', '== is used for object reference comparison, equals() is for content comparison', 'Medium', 'Interview questions', true),
('Can we create an object of an abstract class in Java?', 'Yes', 'No', 'Only if it has no abstract methods', 'Depends on JVM', 'No', 'Easy', 'Interview questions', true),
('What is the purpose of garbage collection in Java?', 'To manage memory automatically by destroying unused objects', 'To collect garbage in the heap memory', 'To remove classes that are not used', 'None of the above', 'To manage memory automatically by destroying unused objects', 'Easy', 'Interview questions', true),
('What is the difference between final, finally, and finalize in Java?', 'final is a keyword, finally is a block, finalize is a method', 'final is a block, finally is a keyword, finalize is a method', 'All are the same in Java', 'None of the above', 'final is a keyword, finally is a block, finalize is a method', 'Medium', 'Interview questions', true),
('What is the difference between throw and throws in Java?', 'throw is used to throw an exception, throws is used in method declaration', 'throws is used to throw an exception, throw is used in method declaration', 'Both are used to throw exceptions', 'None of the above', 'throw is used to throw an exception, throws is used in method declaration', 'Medium', 'Interview questions', true),
('What is the purpose of the transient keyword in Java?', 'To serialize the variable', 'To prevent a variable from being serialized', 'To create a variable that can change', 'None of the above', 'To prevent a variable from being serialized', 'Hard', 'Interview questions', true),
('Explain the concept of multithreading in Java.', 'Multithreading allows multiple threads to run concurrently', 'Multithreading is used for creating multiple classes', 'Multithreading is used to hide data', 'None of the above', 'Multithreading allows multiple threads to run concurrently', 'Medium', 'Interview questions', true),
('What is the difference between ArrayList and LinkedList in Java?', 'ArrayList is faster for insertions, LinkedList is faster for access', 'ArrayList is faster for access, LinkedList is faster for insertions', 'Both are the same', 'None of the above', 'ArrayList is faster for access, LinkedList is faster for insertions', 'Medium', 'Interview questions', true),
('Can we override the main method in Java?', 'Yes', 'No', 'Only in some cases', 'Depends on JVM', 'No', 'Hard', 'Interview questions', true),
('What is method overloading in Java?', 'Method overloading is the ability to define multiple methods with the same name but different parameters', 'Method overloading is defining a method multiple times with the same parameters', 'Method overloading is not possible in Java', 'None of the above', 'Method overloading is the ability to define multiple methods with the same name but different parameters', 'Easy', 'Interview questions', true),
('What is method overriding in Java?', 'Method overriding is redefining a method in a subclass with a different name', 'Method overriding is redefining a method in a subclass with the same name', 'Method overriding is not possible in Java', 'None of the above', 'Method overriding is redefining a method in a subclass with the same name', 'Medium', 'Interview questions', true),
('What is the use of the super keyword in Java?', 'To create a superclass', 'To refer to the immediate parent class object', 'To call a static method', 'None of the above', 'To refer to the immediate parent class object', 'Easy', 'Interview questions', true),
('Can we have multiple public classes in a single Java file?', 'Yes', 'No', 'Only in some cases', 'Depends on JVM', 'No', 'Easy', 'Interview questions', true),
('What is the use of the volatile keyword in Java?', 'To declare a variable as immutable', 'To ensure visibility of changes to variables across threads', 'To create a synchronized method', 'None of the above', 'To ensure visibility of changes to variables across threads', 'Hard', 'Interview questions', true),
('Explain the concept of Java Reflection.', 'Reflection is used to dynamically inspect classes, interfaces, and objects', 'Reflection is used for exception handling', 'Reflection is a type of polymorphism', 'None of the above', 'Reflection is used to dynamically inspect classes, interfaces, and objects', 'Hard', 'Interview questions', true),
('What is the Singleton design pattern?', 'A pattern that restricts the instantiation of a class to one object', 'A pattern that allows multiple instances of a class', 'A pattern used to create an array', 'None of the above', 'A pattern that restricts the instantiation of a class to one object', 'Medium', 'Interview questions', true),
('What is a marker interface?', 'An interface with only one method', 'An interface with no methods or fields', 'An interface with a constructor', 'None of the above', 'An interface with no methods or fields', 'Easy', 'Interview questions', true),
('What is the use of the this keyword in Java?', 'To refer to the current object', 'To refer to the parent class', 'To refer to the child class', 'None of the above', 'To refer to the current object', 'Easy', 'Interview questions', true),
('What is a Java Bean?', 'A reusable software component that follows specific conventions', 'A type of primitive data type', 'A type of exception', 'None of the above', 'A reusable software component that follows specific conventions', 'Easy', 'Interview questions', true),
('What is the difference between checked and unchecked exceptions?', 'Checked exceptions are checked at runtime, unchecked at compile-time', 'Checked exceptions are checked at compile-time, unchecked at runtime', 'Both are the same', 'None of the above', 'Checked exceptions are checked at compile-time, unchecked at runtime', 'Medium', 'Interview questions', true),
('What is the purpose of the package keyword in Java?', 'To import classes', 'To define a package for classes', 'To declare a variable', 'None of the above', 'To define a package for classes', 'Easy', 'Interview questions', true),
('What is the use of the assert keyword in Java?', 'To create a new object', 'To create a new thread', 'To test assumptions in the code', 'None of the above', 'To test assumptions in the code', 'Medium', 'Interview questions', true),
('What is the Java Collections Framework?', 'A framework for collecting garbage', 'A set of classes and interfaces that implement commonly reusable collection data structures', 'A framework for handling exceptions', 'None of the above', 'A set of classes and interfaces that implement commonly reusable collection data structures', 'Easy', 'Interview questions', true),
('What is the difference between a List and a Set in Java?', 'A List can contain duplicates, a Set cannot', 'A Set can contain duplicates, a List cannot', 'Both can contain duplicates', 'None of the above', 'A List can contain duplicates, a Set cannot', 'Easy', 'Interview questions', true),
('What is an Iterator in Java?', 'An object that can be used to iterate through collections', 'A method used to sort collections', 'A class used for exception handling', 'None of the above', 'An object that can be used to iterate through collections', 'Easy', 'Interview questions', true),
('What is the purpose of the synchronized keyword in Java?', 'To prevent data corruption by multiple threads', 'To create multiple instances of a class', 'To convert a method to a static one', 'None of the above', 'To prevent data corruption by multiple threads', 'Medium', 'Interview questions', true),
('Explain the concept of the Executor framework in Java.', 'It is a framework for managing and controlling thread execution', 'It is a framework for exception handling', 'It is a framework for data encapsulation', 'None of the above', 'It is a framework for managing and controlling thread execution', 'Hard', 'Interview questions', true),
('What is a lambda expression in Java?', 'A way to create anonymous methods', 'A way to define classes', 'A way to create new threads', 'None of the above', 'A way to create anonymous methods', 'Easy', 'Interview questions', true),
('Explain the Stream API in Java 8.', 'It is used for functional-style operations on streams of elements', 'It is a new type of collection', 'It is used for creating threads', 'None of the above', 'It is used for functional-style operations on streams of elements', 'Medium', 'Interview questions', true),
('What is the difference between String, StringBuilder, and StringBuffer?', 'String is immutable, StringBuilder is mutable and thread-safe, StringBuffer is mutable but not thread-safe', 'String is mutable, StringBuilder is mutable but not thread-safe, StringBuffer is immutable', 'String is immutable, StringBuilder is mutable but not thread-safe, StringBuffer is mutable and thread-safe', 'None of the above', 'String is immutable, StringBuilder is mutable but not thread-safe, StringBuffer is mutable and thread-safe', 'Hard', 'Interview questions', true),
('What is the Java Memory Model?', 'A model that defines how threads interact through memory', 'A model for managing Java files', 'A model for managing exceptions', 'None of the above', 'A model that defines how threads interact through memory', 'Hard', 'Interview questions', true),
('What is the purpose of the default keyword in an interface?', 'To provide a default implementation of a method', 'To declare a constant', 'To define a variable', 'None of the above', 'To provide a default implementation of a method', 'Medium', 'Interview questions', true),
('Explain the concept of functional interfaces in Java 8.', 'An interface with exactly one abstract method', 'An interface with multiple methods', 'An interface with no methods', 'None of the above', 'An interface with exactly one abstract method', 'Medium', 'Interview questions', true),
('What is the difference between forEach() and map() in Java Streams?', 'forEach() is used to transform data, map() is used for iteration', 'map() is used to transform data, forEach() is used for iteration', 'Both are used for iteration', 'None of the above', 'map() is used to transform data, forEach() is used for iteration', 'Medium', 'Interview questions', true),
('What is method reference in Java 8?', 'A way to refer to methods of functional interfaces', 'A new type of interface', 'A method used for exception handling', 'None of the above', 'A way to refer to methods of functional interfaces', 'Medium', 'Interview questions', true),
('What is Optional in Java?', 'A container object used to contain not-null objects', 'A new data type in Java', 'A type of exception', 'None of the above', 'A container object used to contain not-null objects', 'Medium', 'Interview questions', true),
('What is the CompletableFuture class in Java?', 'A class for handling multiple threads asynchronously', 'A class for creating new objects', 'A class for handling exceptions', 'None of the above', 'A class for handling multiple threads asynchronously', 'Hard', 'Interview questions', true),
('What is the difference between sleep() and wait() in Java?', 'sleep() releases the lock, wait() does not', 'wait() releases the lock, sleep() does not', 'Both do not release the lock', 'None of the above', 'wait() releases the lock, sleep() does not', 'Medium', 'Interview questions', true),
('What is the significance of the transient keyword in Java?', 'To allow serialization of fields', 'To prevent serialization of fields', 'To create immutable objects', 'None of the above', 'To prevent serialization of fields', 'Hard', 'Interview questions', true),
('Explain the concept of deadlock in Java.', 'A situation where two or more threads are blocked forever, waiting for each other', 'A type of exception in Java', 'A technique used in synchronization', 'None of the above', 'A situation where two or more threads are blocked forever, waiting for each other', 'Hard', 'Interview questions', true),
('What is the use of the static block in Java?', 'To execute code before the main method', 'To create objects', 'To handle exceptions', 'None of the above', 'To execute code before the main method', 'Easy', 'Interview questions', true),
('What is a daemon thread in Java?', 'A thread that runs in the background and does not prevent JVM from exiting', 'A thread that handles user input', 'A thread that processes network requests', 'None of the above', 'A thread that runs in the background and does not prevent JVM from exiting', 'Medium', 'Interview questions', true),
('What is serialization in Java?', 'A process of converting an object into a byte stream', 'A process of converting a byte stream into an object', 'A process of creating threads', 'None of the above', 'A process of converting an object into a byte stream', 'Medium', 'Interview questions', true),
('What is the difference between System.out, System.err, and System.in?', 'System.out is for standard output, System.err is for error output, System.in is for input', 'System.err is for standard output, System.out is for error output, System.in is for input', 'Both are for error output', 'None of the above', 'System.out is for standard output, System.err is for error output, System.in is for input', 'Easy', 'Interview questions', true),
('What is the significance of the @FunctionalInterface annotation in Java 8?', 'It is used to define an interface with multiple methods', 'It is used to define a functional interface with only one abstract method', 'It is used to define a class', 'None of the above', 'It is used to define a functional interface with only one abstract method', 'Medium', 'Interview questions', true),
('What is the difference between HashMap and Hashtable?', 'HashMap is synchronized, Hashtable is not', 'Hashtable is synchronized, HashMap is not', 'Both are synchronized', 'None of the above', 'Hashtable is synchronized, HashMap is not', 'Medium', 'Interview questions', true),
('What is the purpose of the break statement in Java?', 'To break out of a loop or switch statement', 'To terminate the program', 'To pause the execution of a program', 'None of the above', 'To break out of a loop or switch statement', 'Easy', 'Interview questions', true),
('Explain the concept of inner classes in Java.', 'Classes defined within other classes', 'A type of polymorphism', 'A new Java feature', 'None of the above', 'Classes defined within other classes', 'Easy', 'Interview questions', true),
('What is a shallow copy in Java?', 'A copy of an object where the fields of the object are copied, but the objects referenced by the fields are not', 'A copy where all fields are copied deeply', 'Both are the same', 'None of the above', 'A copy of an object where the fields of the object are copied, but the objects referenced by the fields are not', 'Medium', 'Interview questions', true),
('What is the difference between StringBuilder and StringBuffer?', 'StringBuilder is synchronized, StringBuffer is not', 'StringBuffer is synchronized, StringBuilder is not', 'Both are synchronized', 'None of the above', 'StringBuffer is synchronized, StringBuilder is not', 'Medium', 'Interview questions', true),
('What is a thread-safe class in Java?', 'A class where instances are safely used by multiple threads', 'A class that cannot be extended', 'A class that handles exceptions', 'None of the above', 'A class where instances are safely used by multiple threads', 'Medium', 'Interview questions', true);
